stages:
  - ssh-publickey
  - prerequisites-install
  - install-terraform
  - configure-ansible
  - deploy
  
  - destroy
  
ssh-publickey:
  stage: ssh-publickey
  script: 
    - pwd
    - mkdir -p ~/.ssh
    - |
      if [ -d ~/.ssh ] ; then chmod 0700 ~/.ssh ; fi
    # - chmod 700 ~/.ssh
    - sudo chmod 700 ~/.ssh/gitlab.pem
    - sudo echo $PRIVATEKEY > ~/.ssh/gitlab.pem
    - sudo chmod 400 ~/.ssh/gitlab.pem
    - sudo echo $PUBLICKEY > ~/.ssh/gitlab.pub
    # - sudo chmod 700 /home/ec2-user/.ssh/id_rsa
    - sudo cp ~/.ssh/gitlab.pem /home/ec2-user/.ssh/id_rsa
    - sudo chmod 400 /home/ec2-user/.ssh/id_rsa
    - sudo cp ~/.ssh/gitlab.pub /home/ec2-user/.ssh/id_rsa.pub
    - cd ~/.ssh
    - sudo cd /home/ec2-user/
    - pwd
  tags:
    - banuka



prerequisites-install:
  stage: prerequisites-install
  script:
    - echo "hi"
    - sudo yum update -y && sudo yum install wget unzip -y
  tags:
    - banuka

install_terraform:
  stage: install-terraform
  script:
    - export VER="0.12.9"
    - wget https://releases.hashicorp.com/terraform/${VER}/terraform_${VER}_linux_amd64.zip
    - unzip terraform_${VER}_linux_amd64.zip
    - sudo mv terraform /usr/local/bin/
    - which terraform
  tags:
    - banuka

deploy:
  stage: deploy
  script:
    - terraform init
    - terraform plan
    - terraform apply --auto-approve
  tags:
    - banuka

configure-ansible:
  stage: configure-ansible
  script:
    - pwd
  tags:
    - banuka

destroy:
  stage: destroy
  script:
    - terraform init
    - terraform destroy --auto-approve
  tags:
    - banuka

    


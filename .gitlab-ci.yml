stages:
  - test
  - ssh-publickey
  - prerequisites-install
  - install-terraform
  - configure-ansible
  - deploy
  
  - destroy
  
Testing:
  stage: test
  script:
    - echo "testing"
    - pwd
  tags:
    - banuka

ssh-publickey:
  stage: ssh-publickey
  script: 
    - pwd
    - mkdir -p ~/.ssh
    - sudo echo "$PRIVATEKEYNEW" | base64 -d > ~/.ssh/gitlabnew.pem
    - chmod 400 ~/.ssh/gitlabnew.pem
    - sudo echo $PUBLICKEYNEW > ~/.ssh/gitlabnew.pub
    - pwd
    # - sudo cp ~/.ssh/gitlabnew.pem /home/ec2-user/.ssh/id_rsa
    # - sudo chmod 400 /home/ec2-user/.ssh/id_rsa
    # - sudo cp ~/.ssh/gitlabnew.pub /home/ec2-user/.ssh/id_rsa.pub
  tags:
    - banuka

prerequisites-install:
  stage: prerequisites-install
  script:
    - echo "hi"
    - sudo yum update -y && sudo yum install wget unzip -y
  tags:
    - banuka

install_terraform:
  stage: install-terraform
  script:
    - export VER="0.12.9"
    - wget https://releases.hashicorp.com/terraform/${VER}/terraform_${VER}_linux_amd64.zip
    - unzip terraform_${VER}_linux_amd64.zip
    - sudo mv terraform /usr/local/bin/
    - pwd
    # - rm -rf terraform_${VER}_linux_amd64.zip
    - which terraform
  tags:
    - banuka

# deploy:
#   stage: deploy
#   script:
#     - terraform init
#     - terraform plan
#     - terraform apply --auto-approve
#   tags:
#     - banuka

# configure-ansible:
#   stage: configure-ansible
#   script:
#     - pwd
#   tags:
#     - banuka

# destroy:
#   stage: destroy
#   script:
#     - terraform init
#     - terraform destroy --auto-approve
#   tags:
#     - banuka

    

